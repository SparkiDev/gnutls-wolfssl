diff --git a/lib/crypto-backend.c b/lib/crypto-backend.c
index 63db24b..dd23fff 100644
--- a/lib/crypto-backend.c
+++ b/lib/crypto-backend.c
@@ -23,6 +23,7 @@
 #include "errors.h"
 #include "gnutls_int.h"
 #include <gnutls/crypto.h>
+#include <dlfcn.h>
 #include "crypto-backend.h"
 #include "crypto.h"
 #include "mpi.h"
@@ -187,6 +188,8 @@ _gnutls_get_crypto_cipher(gnutls_cipher_algorithm_t algo)
 	return _get_algo(&glob_cl, algo);
 }
 
+
+
 /**
  * gnutls_crypto_register_cipher:
  * @algorithm: is the gnutls algorithm identifier
@@ -463,3 +466,24 @@ int gnutls_crypto_register_digest(gnutls_digest_algorithm_t algorithm,
 		"called the deprecated gnutls_crypto_register_digest()\n");
 	return 0;
 }
+
+int gnutls_load_crypto_provider(const char *provider_path)
+{
+    void *handle;
+
+    if (provider_path == NULL) {
+        printf("Error: Provider path must be specified\n");
+        return -1;
+    }
+
+    printf("Loading crypto provider from: %s\n", provider_path);
+
+    handle = dlopen(provider_path, RTLD_NOW);
+    if (handle == NULL) {
+        printf("Failed to load provider: %s\n", dlerror());
+        return -1;
+    }
+
+    printf("Successfully loaded crypto provider\n");
+    return 0;
+}
diff --git a/lib/crypto-backend.h b/lib/crypto-backend.h
index f213a43..858c7e0 100644
--- a/lib/crypto-backend.h
+++ b/lib/crypto-backend.h
@@ -75,6 +75,7 @@ typedef struct {
 	int (*exists)(gnutls_digest_algorithm_t);
 } gnutls_crypto_digest_st;
 
+
 typedef struct {
 	int (*hkdf_extract)(gnutls_mac_algorithm_t, const void *key,
 			    size_t keysize, const void *salt, size_t saltsize,
@@ -95,6 +96,16 @@ typedef struct gnutls_crypto_rnd {
 	int (*self_test)(void); /* this should not require rng initialization */
 } gnutls_crypto_rnd_st;
 
+typedef struct {
+    gnutls_pk_init_func init;
+    gnutls_pk_privkey_generate generate;
+    gnutls_pk_pubkey_import import_pubkey;
+    gnutls_pk_sign_func sign;
+    gnutls_pk_verify_func verify;
+    gnutls_pk_encrypt_func encrypt;
+    gnutls_pk_decrypt_func decrypt;
+} gnutls_crypto_pk_st_custom;
+
 typedef void *bigint_t;
 
 /**
@@ -467,4 +478,6 @@ int _gnutls_rsa_pss_sign_pad(gnutls_x509_spki_st *params, size_t key_bits,
 			     const gnutls_datum_t *data, unsigned char *buffer,
 			     size_t buffer_size);
 
+int gnutls_load_crypto_provider(const char *provider_path);
+
 #endif /* GNUTLS_LIB_CRYPTO_BACKEND_H */
diff --git a/lib/global.c b/lib/global.c
index 42d90ee..9f666a7 100644
--- a/lib/global.c
+++ b/lib/global.c
@@ -22,6 +22,9 @@
  */
 
 #include "gnutls_int.h"
+#include <stdlib.h>
+#include <stdint.h>
+#include "crypto-backend.h"
 #include "errors.h"
 #include <libtasn1.h>
 #include "dh.h"
@@ -367,6 +370,19 @@ static int _gnutls_global_init(unsigned constructor)
 	_gnutls_cryptodev_init();
 	_gnutls_afalg_init();
 
+    /* we check if PROVIDER_PATH was set, if not, we set the default value */
+    const char *path_value = getenv("PROVIDER_PATH");
+    if (path_value == NULL) {
+        _gnutls_debug_log("PROVIDER_PATH was not set, setting to default value: /opt/wolfssl-gnutls-wrapper/lib/");
+        path_value = "/opt/wolfssl-gnutls-wrapper/lib/libgnutls-wolfssl-wrapper.so";
+    }
+
+    if (gnutls_load_crypto_provider(path_value) != 0) {
+        gnutls_assert();
+        goto out;
+    }
+
+
 #ifdef ENABLE_FIPS140
 	/* These self tests are performed on the overridden algorithms
 	 * (e.g., AESNI overridden AES). They are after _gnutls_register_accel_crypto()
diff --git a/lib/includes/gnutls/crypto.h b/lib/includes/gnutls/crypto.h
index 400072d..bcb9f1a 100644
--- a/lib/includes/gnutls/crypto.h
+++ b/lib/includes/gnutls/crypto.h
@@ -191,7 +191,7 @@ int gnutls_rnd(gnutls_rnd_level_t level, void *data, size_t len);
 
 void gnutls_rnd_refresh(void);
 
-/* API to override ciphers and MAC algorithms 
+/* API to override ciphers and MAC algorithms
  */
 
 typedef int (*gnutls_cipher_init_func)(gnutls_cipher_algorithm_t, void **ctx,
@@ -261,6 +261,37 @@ int gnutls_crypto_register_mac(
 	gnutls_mac_deinit_func deinit,
 	gnutls_mac_fast_func hash_fast) _GNUTLS_GCC_ATTR_DEPRECATED;
 
+typedef int (*gnutls_pk_init_func)(void**ctx);
+typedef int (*gnutls_pk_privkey_generate)(void *ctx, const void *privkey,
+                                          gnutls_pk_algorithm_t algo,
+                                          unsigned int bits,
+                                          unsigned int flags,
+                                          const void* data,
+                                          size_t datasize);
+typedef int (*gnutls_pk_pubkey_import)(void *ctx, const void* pubkey,
+                                       unsigned int usage,
+                                       unsigned int flags);
+typedef int (*gnutls_pk_sign_func)(void *ctx,
+                                   const void *privkey,
+                                   gnutls_digest_algorithm_t hash,
+                                   unsigned int flags,
+                                   const void *data,
+                                   const void *signature);
+typedef int (*gnutls_pk_verify_func)(void *ctx,
+                                     const void *pubkey,
+                                     gnutls_digest_algorithm_t hash,
+                                     unsigned int flags,
+                                     const void *data,
+                                     const void *signature);
+typedef int (*gnutls_pk_encrypt_func)(void *ctx, const void* pub_key,
+                                      unsigned int flags,
+                                      const void* plain,
+                                      void *encr);
+typedef int (*gnutls_pk_decrypt_func)(void *ctx, const void* priv_key,
+                                      unsigned int flags,
+                                      const void* encr,
+                                      void *plain);
+
 typedef int (*gnutls_digest_init_func)(gnutls_digest_algorithm_t, void **ctx);
 typedef int (*gnutls_digest_hash_func)(void *ctx, const void *text,
 				       size_t textsize);
diff --git a/lib/libgnutls.map b/lib/libgnutls.map
index c236683..4082adf 100644
--- a/lib/libgnutls.map
+++ b/lib/libgnutls.map
@@ -1017,6 +1017,9 @@ GNUTLS_3_4
 	gnutls_crypto_register_aead_cipher;
 	gnutls_crypto_register_mac;
 	gnutls_crypto_register_digest;
+    gnutls_crypto_single_cipher_register;
+    gnutls_crypto_single_mac_register;
+    gnutls_crypto_single_digest_register;
 	gnutls_ext_register;
 	gnutls_buffer_append_data;
 	gnutls_supplemental_register;
